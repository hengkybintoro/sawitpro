// Code generated by MockGen. DO NOT EDIT.
// Source: handler/interfaces.go

// Package handler is a generated GoMock package.
package handler

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo/v4"
)

// MockServerInterface is a mock of ServerInterface interface.
type MockServerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockServerInterfaceMockRecorder
}

// MockServerInterfaceMockRecorder is the mock recorder for MockServerInterface.
type MockServerInterfaceMockRecorder struct {
	mock *MockServerInterface
}

// NewMockServerInterface creates a new mock instance.
func NewMockServerInterface(ctrl *gomock.Controller) *MockServerInterface {
	mock := &MockServerInterface{ctrl: ctrl}
	mock.recorder = &MockServerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServerInterface) EXPECT() *MockServerInterfaceMockRecorder {
	return m.recorder
}

// AddEstate mocks base method.
func (m *MockServerInterface) AddEstate(c echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddEstate", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddEstate indicates an expected call of AddEstate.
func (mr *MockServerInterfaceMockRecorder) AddEstate(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddEstate", reflect.TypeOf((*MockServerInterface)(nil).AddEstate), c)
}

// AddTree mocks base method.
func (m *MockServerInterface) AddTree(c echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddTree", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddTree indicates an expected call of AddTree.
func (mr *MockServerInterfaceMockRecorder) AddTree(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddTree", reflect.TypeOf((*MockServerInterface)(nil).AddTree), c)
}

// GetDronePlan mocks base method.
func (m *MockServerInterface) GetDronePlan(c echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDronePlan", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetDronePlan indicates an expected call of GetDronePlan.
func (mr *MockServerInterfaceMockRecorder) GetDronePlan(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDronePlan", reflect.TypeOf((*MockServerInterface)(nil).GetDronePlan), c)
}

// GetEstateStats mocks base method.
func (m *MockServerInterface) GetEstateStats(c echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEstateStats", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetEstateStats indicates an expected call of GetEstateStats.
func (mr *MockServerInterfaceMockRecorder) GetEstateStats(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEstateStats", reflect.TypeOf((*MockServerInterface)(nil).GetEstateStats), c)
}
